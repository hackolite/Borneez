#!/bin/bash

# Script pour activer/d√©sactiver le d√©marrage automatique de Borneez au boot
# Ce script configure les services systemd pour d√©marrer automatiquement
# Usage: sudo ./enable-autostart.sh [enable|disable|status]

set -e

# Couleurs pour l'affichage
RED='\033[0;31m'
GREEN='\033[0;32m'
BLUE='\033[0;34m'
YELLOW='\033[1;33m'
NC='\033[0m' # No Color

# V√©rifier les privil√®ges root
if [ "$EUID" -ne 0 ]; then 
    echo -e "${RED}‚ùå Ce script doit √™tre ex√©cut√© avec sudo${NC}"
    echo "Usage: sudo ./enable-autostart.sh [enable|disable|status]"
    exit 1
fi

# R√©cup√©rer l'utilisateur r√©el (celui qui a lanc√© sudo)
REAL_USER=${SUDO_USER:-$USER}
REAL_HOME=$(eval echo ~$REAL_USER)
SCRIPT_DIR="$( cd "$( dirname "${BASH_SOURCE[0]}" )" && pwd )"
PROJECT_DIR="$(dirname "$(dirname "$SCRIPT_DIR")")"

# D√©finir l'action (enable par d√©faut)
ACTION=${1:-enable}

echo -e "${BLUE}‚ïî‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïó${NC}"
echo -e "${BLUE}‚ïë     üöÄ Borneez - Configuration D√©marrage Automatique     ‚ïë${NC}"
echo -e "${BLUE}‚ïö‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïù${NC}"
echo ""
echo -e "${GREEN}üìÇ R√©pertoire du projet: ${PROJECT_DIR}${NC}"
echo -e "${GREEN}üë§ Utilisateur: ${REAL_USER}${NC}"
echo ""

# Fonction pour v√©rifier si les services existent
check_services_exist() {
    local gpio_exists=false
    local server_exists=false
    
    if [ -f "/etc/systemd/system/borneez-gpio.service" ]; then
        gpio_exists=true
    fi
    
    if [ -f "/etc/systemd/system/borneez-server.service" ]; then
        server_exists=true
    fi
    
    if [ "$gpio_exists" = false ] || [ "$server_exists" = false ]; then
        return 1
    fi
    return 0
}

# Fonction pour cr√©er les services systemd s'ils n'existent pas
create_services() {
    echo -e "${BLUE}‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê${NC}"
    echo -e "${BLUE}Configuration des services systemd${NC}"
    echo -e "${BLUE}‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê${NC}"
    echo ""
    
    # V√©rifier que les fichiers source existent
    if [ ! -f "$PROJECT_DIR/deployment/systemd/borneez-gpio.service" ]; then
        echo -e "${RED}‚ùå Fichier source borneez-gpio.service introuvable${NC}"
        exit 1
    fi
    
    if [ ! -f "$PROJECT_DIR/deployment/systemd/borneez-server.service" ]; then
        echo -e "${RED}‚ùå Fichier source borneez-server.service introuvable${NC}"
        exit 1
    fi
    
    echo -e "${YELLOW}üìù Cr√©ation des fichiers de service systemd...${NC}"
    
    # D√©tecter si un reverse proxy est install√©
    # Si nginx ou caddy est actif et configur√© pour Borneez, utiliser port 3000
    # Sinon, utiliser le port 80 directement
    SERVER_PORT=3000
    if systemctl is-active nginx &>/dev/null && [ -f "/etc/nginx/sites-enabled/borneez" ]; then
        echo -e "${GREEN}   Nginx d√©tect√© - Configuration avec port 3000 (reverse proxy)${NC}"
        SERVER_PORT=3000
    elif systemctl is-active caddy &>/dev/null && [ -f "/etc/caddy/Caddyfile" ]; then
        echo -e "${GREEN}   Caddy d√©tect√© - Configuration avec port 3000 (reverse proxy)${NC}"
        SERVER_PORT=3000
    else
        echo -e "${YELLOW}   Aucun reverse proxy d√©tect√© - Configuration avec port 80${NC}"
        SERVER_PORT=80
    fi
    
    # Copier et adapter le service GPIO
    sed "s|/home/pi/Borneez|$PROJECT_DIR|g" "$PROJECT_DIR/deployment/systemd/borneez-gpio.service" | \
    sed "s|User=pi|User=$REAL_USER|g" | \
    sed "s|Group=pi|Group=$REAL_USER|g" > /etc/systemd/system/borneez-gpio.service
    
    # Copier et adapter le service serveur
    sed "s|/home/pi/Borneez|$PROJECT_DIR|g" "$PROJECT_DIR/deployment/systemd/borneez-server.service" | \
    sed "s|User=pi|User=$REAL_USER|g" | \
    sed "s|Group=pi|Group=$REAL_USER|g" | \
    sed "s|PORT=3000|PORT=$SERVER_PORT|g" > /etc/systemd/system/borneez-server.service
    
    # Recharger systemd
    systemctl daemon-reload
    
    echo -e "${GREEN}‚úÖ Services systemd cr√©√©s${NC}"
    echo ""
}

# Fonction pour afficher le statut
show_status() {
    echo -e "${BLUE}‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê${NC}"
    echo -e "${BLUE}Statut des services Borneez${NC}"
    echo -e "${BLUE}‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê${NC}"
    echo ""
    
    if ! check_services_exist; then
        echo -e "${YELLOW}‚ö†Ô∏è  Les services systemd ne sont pas encore configur√©s${NC}"
        echo -e "${YELLOW}   Ex√©cutez: ${BLUE}sudo ./enable-autostart.sh enable${NC}"
        echo ""
        return
    fi
    
    echo -e "${YELLOW}üìä Service GPIO:${NC}"
    systemctl status borneez-gpio.service --no-pager || true
    echo ""
    
    echo -e "${YELLOW}üìä Service Serveur:${NC}"
    systemctl status borneez-server.service --no-pager || true
    echo ""
    
    # V√©rifier si les services sont activ√©s pour le d√©marrage automatique
    echo -e "${BLUE}‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê${NC}"
    echo -e "${BLUE}Configuration du d√©marrage automatique${NC}"
    echo -e "${BLUE}‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê${NC}"
    echo ""
    
    if systemctl is-enabled borneez-gpio.service &>/dev/null; then
        echo -e "   GPIO:   ${GREEN}‚úÖ Activ√©${NC}"
    else
        echo -e "   GPIO:   ${RED}‚ùå D√©sactiv√©${NC}"
    fi
    
    if systemctl is-enabled borneez-server.service &>/dev/null; then
        echo -e "   Server: ${GREEN}‚úÖ Activ√©${NC}"
    else
        echo -e "   Server: ${RED}‚ùå D√©sactiv√©${NC}"
    fi
    echo ""
}

# Fonction pour activer le d√©marrage automatique
enable_autostart() {
    # Cr√©er les services s'ils n'existent pas
    if ! check_services_exist; then
        echo -e "${YELLOW}‚ö†Ô∏è  Les services systemd n'existent pas encore${NC}"
        create_services
    else
        echo -e "${GREEN}‚úÖ Les services systemd existent d√©j√†${NC}"
        echo ""
        # Recharger au cas o√π les fichiers auraient chang√©
        systemctl daemon-reload
    fi
    
    echo -e "${BLUE}‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê${NC}"
    echo -e "${BLUE}Activation du d√©marrage automatique${NC}"
    echo -e "${BLUE}‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê${NC}"
    echo ""
    
    echo -e "${YELLOW}üîß Activation des services...${NC}"
    systemctl enable borneez-gpio.service
    systemctl enable borneez-server.service
    echo ""
    
    echo -e "${YELLOW}üöÄ D√©marrage des services...${NC}"
    systemctl start borneez-gpio.service
    sleep 2
    systemctl start borneez-server.service
    sleep 2
    echo ""
    
    echo -e "${GREEN}‚úÖ Services activ√©s et d√©marr√©s${NC}"
    echo ""
    
    # Afficher le statut
    show_status
    
    # Obtenir les informations r√©seau
    LOCAL_IP=$(hostname -I | awk '{print $1}')
    HOSTNAME=$(hostname)
    
    echo ""
    echo -e "${GREEN}‚ïî‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïó${NC}"
    echo -e "${GREEN}‚ïë           ‚úÖ D√âMARRAGE AUTOMATIQUE ACTIV√â ‚úÖ             ‚ïë${NC}"
    echo -e "${GREEN}‚ïö‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïù${NC}"
    echo ""
    
    # D√©tecter si un reverse proxy est install√© pour afficher les bonnes infos
    if systemctl is-active nginx &>/dev/null && [ -f "/etc/nginx/sites-enabled/borneez" ]; then
        echo -e "${GREEN}üåê Application disponible sur (via Nginx):${NC}"
        echo -e "   Local:    ${BLUE}http://localhost${NC}"
        echo -e "   Hostname: ${BLUE}http://$HOSTNAME.local${NC}"
        echo -e "   IP:       ${BLUE}http://$LOCAL_IP${NC}"
    elif systemctl is-active caddy &>/dev/null && [ -f "/etc/caddy/Caddyfile" ]; then
        echo -e "${GREEN}üåê Application disponible sur (via Caddy):${NC}"
        echo -e "   Local:    ${BLUE}http://localhost${NC}"
        echo -e "   Hostname: ${BLUE}http://$HOSTNAME.local${NC}"
        echo -e "   IP:       ${BLUE}http://$LOCAL_IP${NC}"
    else
        echo -e "${GREEN}üåê Application disponible sur (port 80, sans reverse proxy):${NC}"
        echo -e "   Local:    ${BLUE}http://localhost${NC}"
        echo -e "   Hostname: ${BLUE}http://$HOSTNAME.local${NC}"
        echo -e "   IP:       ${BLUE}http://$LOCAL_IP${NC}"
    fi
    echo ""
    echo -e "${GREEN}üîß Backend GPIO:${NC}"
    echo -e "   Local:  ${BLUE}http://localhost:8000${NC}"
    echo -e "   Docs:   ${BLUE}http://localhost:8000/docs${NC}"
    echo ""
    echo -e "${YELLOW}üí° Les services d√©marreront automatiquement au prochain red√©marrage${NC}"
    echo ""
}

# Fonction pour d√©sactiver le d√©marrage automatique
disable_autostart() {
    if ! check_services_exist; then
        echo -e "${YELLOW}‚ö†Ô∏è  Les services systemd ne sont pas configur√©s${NC}"
        return
    fi
    
    echo -e "${BLUE}‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê${NC}"
    echo -e "${BLUE}D√©sactivation du d√©marrage automatique${NC}"
    echo -e "${BLUE}‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê${NC}"
    echo ""
    
    echo -e "${YELLOW}üõë Arr√™t des services...${NC}"
    systemctl stop borneez-server.service || true
    systemctl stop borneez-gpio.service || true
    echo ""
    
    echo -e "${YELLOW}üîß D√©sactivation des services...${NC}"
    systemctl disable borneez-gpio.service
    systemctl disable borneez-server.service
    echo ""
    
    echo -e "${GREEN}‚úÖ D√©marrage automatique d√©sactiv√©${NC}"
    echo ""
    echo -e "${YELLOW}üí° Les services ne d√©marreront plus automatiquement au boot${NC}"
    echo -e "${YELLOW}   Pour les red√©marrer manuellement, utilisez:${NC}"
    echo -e "   ${BLUE}sudo systemctl start borneez-gpio${NC}"
    echo -e "   ${BLUE}sudo systemctl start borneez-server${NC}"
    echo ""
}

# Traiter l'action demand√©e
case "$ACTION" in
    enable)
        enable_autostart
        ;;
    disable)
        disable_autostart
        ;;
    status)
        show_status
        ;;
    *)
        echo -e "${RED}‚ùå Action invalide: $ACTION${NC}"
        echo ""
        echo "Usage: sudo ./enable-autostart.sh [enable|disable|status]"
        echo ""
        echo "Actions disponibles:"
        echo "  enable  - Active le d√©marrage automatique au boot"
        echo "  disable - D√©sactive le d√©marrage automatique"
        echo "  status  - Affiche le statut des services"
        echo ""
        exit 1
        ;;
esac
